version: "3.8"
services:
  surrealdb:
    container_name: db-surreal
    image: surrealdb/surrealdb:latest
    restart: unless-stopped
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    entrypoint: 
      - /surreal 
      - start 
      - --user
      - $DB_USER
      - --pass
      - $DB_PASSWORD
      - rocksdb:/datastore/surrealdata.db
    ports:
      - 8000:8000
    volumes:
      - /mnt/fast/databases/surreal:/datastore
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.surrealdb.entrypoints=web"
      - "traefik.http.routers.surrealdb.rule=Host(`surrealdb.${DOMAIN_NAME}`)"
      - "traefik.http.routers.surrealdb-secure.tls=true"
      - "traefik.http.routers.surrealdb-secure.entrypoints=websecure"
      - "traefik.http.routers.surrealdb-secure.rule=Host(`surrealdb.${DOMAIN_NAME}`)"
  pg:
    container_name: db-pg
    image: postgres
    restart: always
    ports:
      - 5432:5432
    # set shared memory limit when using docker-compose
    shm_size: 2048mb
    # or set shared memory limit when deploy via swarm stack
    volumes:
      #  - type: tmpfs
      #    target: /dev/shm
      #    tmpfs:
      #      size: 134217728 # 128*2^20 bytes = 128Mb
      - /mnt/fast/databases/postgres:/var/lib/postgresql/data
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_PASSWORD: ${PG_PASSWORD}
  adminer:
    container_name: db-adminer
    image: adminer
    restart: always
    ports:
      - 3080:8080

networks:
  default:
    name: backend
    external: true
