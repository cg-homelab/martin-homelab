version: "3.8"
services:
  # Fix cloudflare ddos protection issues
  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/Oslo
    ports:
      - ${PORT:-8191}:8191
    networks:
      - backend
    restart: unless-stopped
  # Handle media requests 
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.deluge.entrypoints=web"
      - "traefik.http.routers.deluge.rule=Host(`overseerr.${DOMAIN_NAME}`)"
      - "traefik.http.routers.deluge-secure.tls=true"
      - "traefik.http.routers.deluge-secure.entrypoints=websecure"
      - "traefik.http.routers.deluge-secure.rule=Host(`overseerr.${DOMAIN_NAME}`)"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Oslo
    volumes:
      - /mnt/fast/appdata/overseerr:/config
    ports:
      - 5055:5055
    restart: unless-stopped
    networks:
      - frontend
      - backend
  # Index proxy / scanner
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Oslo
    volumes:
      - /mnt/fast/appdata/prowlarr:/config
    ports:
      - 9696:9696
    networks:
      - backend
    restart: unless-stopped
  # Book manager
  readarr:
    # books
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Oslo
    volumes:
      - /mnt/fast/appdata/readarr:/config
      - /mnt/array/media/books:/books #optional
      - /mnt/array/downloads/:/downloads #optional
    ports:
      - 8787:8787
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.deluge.entrypoints=web"
      - "traefik.http.routers.deluge.rule=Host(`readarr.${DOMAIN_NAME}`)"
      - "traefik.http.routers.deluge-secure.tls=true"
      - "traefik.http.routers.deluge-secure.entrypoints=websecure"
      - "traefik.http.routers.deluge-secure.rule=Host(`readarr.${DOMAIN_NAME}`)"
    networks:
      - backend
    restart: unless-stopped
  # Movie manager
  radarr:
    # Movies
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Oslo
    volumes:
      - /mnt/fast/appdata/radarr:/config
      - /mnt/array/media/movies:/movies #optional
      - /mnt/array/downloads/:/downloads #optional
    ports:
      - 7878:7878
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.deluge.entrypoints=web"
      - "traefik.http.routers.deluge.rule=Host(`radarr.${DOMAIN_NAME}`)"
      - "traefik.http.routers.deluge-secure.tls=true"
      - "traefik.http.routers.deluge-secure.entrypoints=websecure"
      - "traefik.http.routers.deluge-secure.rule=Host(`radarr.${DOMAIN_NAME}`)"
    networks:
      - backend
    restart: unless-stopped
  # Serie manager
  sonarr:
    # Series
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Oslo
    volumes:
      - /mnt/fast/appdata/sonarr-anime:/config
      - /mnt/array/media/series/anime:/anime #optional
      - /mnt/array/media/series/tv:/tv #optional
      - /mnt/array/downloads/:/downloads #optional
    ports:
      - 8989:8989
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.deluge.entrypoints=web"
      - "traefik.http.routers.deluge.rule=Host(`sonarr.${DOMAIN_NAME}`)"
      - "traefik.http.routers.deluge-secure.tls=true"
      - "traefik.http.routers.deluge-secure.entrypoints=websecure"
      - "traefik.http.routers.deluge-secure.rule=Host(`sonarr.${DOMAIN_NAME}`)"
    networks:
      - backend
    restart: unless-stopped
  # Media compression
  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    ports:
      - 8265:8265 # webUI port
      - 8266:8266 # server port
    networks:
      - backend
    environment:
      - TZ=Europe/London
      - PUID=1000
      - PGID=1000
      - UMASK_SET=002
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - inContainer=true
      - ffmpegVersion=6
      - nodeName=homelab-tdarr-internal
      - NVIDIA_DRIVER_CAPABILITIES=all
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - /mnt/fast/appdata/tdarr/server:/app/server
      - /mnt/fast/appdata/tdarr/configs:/app/configs
      - /mnt/fast/appdata/tdarr/logs:/app/logs
      - /mnt/array/media:/media
      - /mnt/fast/appdata/tdarr-transcode:/transcode
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities:
                - gpu
networks:
  backend:
    external: true
  frontend:
    external: true
  default:
    name: backend
    external: true
