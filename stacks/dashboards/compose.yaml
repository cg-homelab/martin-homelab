version: "3.8"
services:
  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    environment:
      - CONTAINERS=1 # Allow access to viewing containers
      - SERVICES=1 # Allow access to viewing services (necessary when using Docker Swarm)
      - TASKS=1 # Allow access to viewing tasks (necessary when using Docker Swarm)
      - POST=0 # Disallow any POST operations (effectively read-only)
    ports:
      - 127.0.0.1:2375:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only
    networks:
      - backend
    restart: unless-stopped
  # Homelab Dashboard
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    ports:
      - 3000:3000
    volumes:
      - /mnt/fast/appdata/homepage:/app/config # Make sure your local config directory exists
    restart: unless-stopped
    networks:
      - backend
      - frontend    
    # env_file:
       # - stack.env
    environment:
      - HOMEPAGE_ALLOWED_HOSTS=${HOMEPAGE_ALLOWED_HOSTS}
      - PUID=${PUID}
      - PGID=${PGID}

      - HOMEPAGE_VAR_TRUENAS_URL=${HOMEPAGE_VAR_TRUENAS_URL}
      - HOMEPAGE_VAR_TRUENAS_API_KEY=${HOMEPAGE_VAR_TRUENAS_API_KEY} 

      - HOMEPAGE_VAR_PORTAINER_URL=${HOMEPAGE_VAR_PORTAINER_URL}
      - HOMEPAGE_VAR_PORTAINER_API_KEY=${HOMEPAGE_VAR_PORTAINER_API_KEY}

      - HOMEPAGE_VAR_UNIFI_NETWORK_URL=${HOMEPAGE_VAR_UNIFI_NETWORK_URL}
      - HOMEPAGE_VAR_UNIFI_NETWORK_USERNAME=${HOMEPAGE_VAR_UNIFI_NETWORK_USERNAME}
      - HOMEPAGE_VAR_UNIFI_NETWORK_PASSWORD=${HOMEPAGE_VAR_UNIFI_NETWORK_PASSWORD}

      - HOMEPAGE_VAR_TAUTULLI_URL=${HOMEPAGE_VAR_TAUTULLI_URL}
      - HOMEPAGE_VAR_TAUTULLI_API_KEY=${HOMEPAGE_VAR_TAUTULLI_API_KEY}

      - HOMEPAGE_VAR_PEANUT_URL=${HOMEPAGE_VAR_PEANUT_URL}
      - HOMEPAGE_VAR_PEANUT_USERNAME=${HOMEPAGE_VAR_PEANUT_USERNAME}
      - HOMEPAGE_VAR_PEANUT_PASSWORD=${HOMEPAGE_VAR_PEANUT_PASSWORD}

      - HOMEPAGE_VAR_SONARR_URL=${HOMEPAGE_VAR_SONARR_URL}
      - HOMEPAGE_VAR_SONARR_API_KEY=${HOMEPAGE_VAR_SONARR_API_KEY}

      - HOMEPAGE_VAR_RADARR_URL=${HOMEPAGE_VAR_RADARR_URL}
      - HOMEPAGE_VAR_RADARR_API_KEY=${HOMEPAGE_VAR_RADARR_API_KEY}

      - HOMEPAGE_VAR_OVERSEERR_URL=${HOMEPAGE_VAR_OVERSEERR_URL}
      - HOMEPAGE_VAR_OVERSEER_API_KEY=${HOMEPAGE_VAR_OVERSEER_API_KEY}

      - HOMEPAGE_VAR_DELUGE_URL=${HOMEPAGE_VAR_DELUGE_URL}
      - HOMEPAGE_VAR_DELUGE_PASSWORD=${HOMEPAGE_VAR_DELUGE_PASSWORD}

      - HOMEPAGE_VAR_NZBGET_URL=${HOMEPAGE_VAR_NZBGET_URL}
      - HOMEPAGE_VAR_NZBGET_USERNAME=${HOMEPAGE_VAR_NZBGET_USERNAME}
      - HOMEPAGE_VAR_NZBGET_PASSWORD=${HOMEPAGE_VAR_NZBGET_PASSWORD}
  # UPS Dashboard
  ups-dashboard:
    # Repo https://github.com/Brandawg93/PeaNUT/tree/main
    image: brandawg93/peanut:latest
    container_name: ups-dashboard
    restart: unless-stopped
    volumes:
      - /mnt/fast/appdata/peanut:/config
    ports:
      - 3001:3001
    environment:
      - WEB_PORT=3001
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ups-dashboard.entrypoints=web"
      - "traefik.http.routers.ups-dashboard.rule=Host(`peanut.${DOMAIN_NAME}`)"
      - "traefik.http.routers.ups-dashboard-secure.tls=true"
      - "traefik.http.routers.ups-dashboard-secure.entrypoints=websecure"
      - "traefik.http.routers.ups-dashboard-secure.rule=Host(`peanut.${DOMAIN_NAME}`)"
    networks:
      - frontend
  # Docker dashboard    
  # portainer-server:
  #   container_name: portainer-server
  #   image: docker.io/portainer/portainer-ce:alpine
  #   ports:
  #     # --> (Optional) Remove when using traefik...
  #     - 9000:9000
  #     - 9443:9443
  #   # <--
  #     - 8000:8000
  #   volumes:
  #     #- /run/docker.sock:/var/run/docker.sock
  #     - /mnt/fast/appdata/portainer-server:/data
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.services.portainer.loadbalancer.server.port=9000
  #     - traefik.http.routers.portainer.service=portainer
  #     - traefik.http.routers.portainer.entrypoints=websecure
  #     - traefik.http.routers.portainer.rule=Host(`portainer.clenchedgaming.com`)
  #     - traefik.http.routers.portainer.tls=true
  #   networks:
  #     - frontend
  #     - backend
  #   restart: unless-stopped
networks:
  backend:
    external: true
  frontend:
    external: true
